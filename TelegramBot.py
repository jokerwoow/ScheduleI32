# -*- coding: utf-8 -*
import requests
from bs4 import BeautifulSoup
import telebot 
import datetime
from time import sleep
import random
TOKEN='519695376:AAGgB9LqmRsiGPyYnDSWNCbMXxJqxRFBHas'
bot=telebot.TeleBot(TOKEN)

#@bot.message_handler(content_types=["text"])
#-226511191
url = "http://asu.pnu.edu.ua/cgi-bin/timetable.cgi"

def brous(day,weekDay,tmTd):
	try:
		response = requests.post(url,data={'group':'–Ü–ù–§-32'.encode('cp1251'),'sdate':day,'btn btn-success':'true','faculty':'1002'})
		text=str(response.text.encode('iso-8859-1').decode('cp1251'))
		soup = BeautifulSoup(text,'html.parser')
		
		schedule=[] 
		time=[]
		numb=[]
		things=[]
		
		text=''
	
		divTag = soup.find("div", {"class": "container"})
		
		for tag in divTag:
		    tdTags = tag.find_all("td")
		    for tag in tdTags:
		        schedule.append(tag.text)   
		a=len(schedule)        
		size=a-(a/3)
		n=0
		if len(schedule)>1:
			for i in range(len(schedule)-int(size)):
				numb.append(schedule[n])
				n=n+1
				time.append(schedule[n][0:5]+'-'+schedule[n][5:10])
				n=n+1
				things.append(schedule[n])
				n=n+1
			for i in range(int(a/3)):
				if things[i]=='':
					numb[i]=''
					time[i]=''
					text=''
				else:	
					text=text+numb[i]+' –ø–∞—Ä–∞ ' +'('+time[i]+')'+'\n'+things[i]+'\n\n'
			text='–†–æ–∑–∫–ª–∞–¥ –Ω–∞ '+day+'('+weekDay+')'+'\n\n'+text	
		elif weekDay=='Saturday' or weekDay=='Sunday':
			text=tmTd+'–í–∏—Ö—ñ–¥–Ω–∏–π' 			
		else:
			text=tmTd+'–Ω–µ–º–∞—î –ø–∞—Ä —é—Ö—É üëç'	
	except:
		text='–°–∞–π—Ç –∑ —Ä–æ–∑–∫–ª–∞–¥–æ–º –Ω–µ –ø—Ä–∞—Ü—é—î'
	return text	
	'''elif weekDay>4:	
		text='–í–∏—Ö—ñ–¥–Ω–∏–∏–∏–∏–∏–∏–π'''
#–ê–≤—Ç–æ–≤—ñ–¥–ø—Ä–∞–≤–∫–∞ 
'''def botMessage(text):	
	bot.send_message(-226511191,text)

while True:	
	now= datetime.datetime.now()
	day=str(now.day+1)+'.'+str(now.month)+'.'+str(now.year)
	hour=now.hour
	if hour==17:
		botMessage(brous(day))	
	sleep(3600)	'''
markup = telebot.types.ReplyKeyboardMarkup()
markup.row('/–°—å–æ–≥–æ–¥–Ω—ñ', '/–ó–∞–≤—Ç—Ä–∞')
markup.row('/–†–æ–∑–∫–ª–∞–¥', '/–í–∏–∫–ª–∞–¥–∞—á')

@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id,'–ê –æ—Å—å —ñ —Ä–æ–∑–∫–ª–∞–¥', reply_markup=markup)

@bot.message_handler(commands=['–°—å–æ–≥–æ–¥–Ω—ñ'])
def today(message):
	now= datetime.datetime.now()
	day=str(now.day)+'.'+str(now.month)+'.'+str(now.year)
	weekDay=datetime.datetime(now.year,now.month,now.day).strftime('%A')
	tmTd='–°—å–æ–≥–æ–¥–Ω—ñ '
	bot.send_message(message.chat.id,brous(day,weekDay,tmTd))	

@bot.message_handler(commands=['–ó–∞–≤—Ç—Ä–∞'])
def tommorrow(message):
	now = datetime.datetime.now()
	
	try:
		day=str(now.day+1)+'.'+str(now.month)+'.'+str(now.year)
		weekDay=datetime.datetime(now.year,now.month,now.day+1).strftime('%A')
	except:
		weekDay=datetime.datetime(now.year,now.month+1,1).strftime('%A')
		day=str(1)+'.'+str(now.month+1)+'.'+str(now.year)	
	tmTd='–ó–∞–≤—Ç—Ä–∞ '
	bot.send_message(message.chat.id,brous(day,weekDay,tmTd))
@bot.message_handler(commands=['–í–∏–∫–ª–∞–¥–∞—á'])
def teacher(message):
	teach = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True)
	teach.row('–ú–û–Ü–î–û.', '–û–ø–µ—Ä–∞—Ü—ñ–π–Ω—ñ. —Å–∏—Å—Ç–µ–º–∏.')
	teach.row('–ü–µ–¥–∞–≥–æ–≥—ñ–∫–∞.', '–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç.')
	teach.row('–ö–æ–º–ø. –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞.', '–ö–æ–º–ø. –ú–µ—Ä–µ–∂—ñ.')
	teach.row('–ü–∞—Ä–∞–ª–µ–ª—å–Ω—ñ. –æ–±—á–∏—Å.', '–û–±—Ä–æ–±–∫–∞ –∑–æ–±—Ä–∞–∂.')

	bot.send_message(message.chat.id,'–í–∏–±–µ—Ä—ñ—Ç—å –ø—Ä–µ–¥–º–µ—Ç –∑ —è–∫–æ–≥–æ —Ö–æ—á–µ—Ç–µ –∑–Ω–∞—Ç–∏ –≤–∏–∫–ª–∞–¥–∞—á–∞',reply_markup=teach)

@bot.message_handler(commands=['–†–æ–∑–∫–ª–∞–¥'])
def time(message):
	schedule='1 –ø–∞—Ä–∞ 9:00-10:20 \n 2 –ø–∞—Ä–∞ 10:30-11:50 \n 3 –ø–∞—Ä–∞ 12:15-13:35 \n 4 –ø–∞—Ä–∞ 13:50-15:10 \n 5 –ø–∞—Ä–∞ 15:25-16:45 \n 6 –ø–∞—Ä–∞ 16:55-18:15'
	bot.send_message(message.chat.id,schedule)	
@bot.message_handler(commands=['help'])
def help(message):
	bot.send_message(message.chat.id,'/td-—Ä–æ–∑–∫–ª–∞–¥ –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ\n/tm-—Ä–æ–∑–∫–ª–∞–¥ –Ω–∞ –∑–∞–≤—Ç—Ä–∞\n/time-—Ä–æ–∑–∫–ª–∞–¥ –ø–∞—Ä\n/help-–¥–æ–≥–∞–¥–∞—î—Ç–µ—Å—å —Å–∞–º—ñüëç')	

@bot.message_handler(content_types=["text"])
def text(message):
	now= datetime.datetime.now()
	lox=['–õ–∞—à–∞—Ä–∞ —è —Ç–µ–±–µ —Ö–µ–π—á—É','–ü–∑–¥—Ü —Ç–∏ –ª–æ—Ö','–õ—å–æ—Ö–∞ –ø—ñ–¥—Ä','–ë–æ–∂–µ –ª—å–æ—Ö–∞ —á–æ–≥–æ —Ç–∏ —Ç–∞–∫–∏–π –º—É–¥–∞–∫?',
	'–û–π —Ç–∞ –∑–∞–∫—Ä–∏–π—Å—è –≤–∂–µ','–í—Å—å–æ —Ç–æ–±—ñ –ø–∏–∑–¥–∞','–¢—ñ–∫–∞–π –∑ —Å–µ–ª–∞ –º—É–¥–∞–∫ –ø–æ —Ç–µ–±–µ –≤–∏—ó—Ö–∞–ª–∏']

	today=['—è–∫—ñ –ø–∞—Ä–∏ —Å—å–æ–≥–æ–¥–Ω—ñ','—è–∫—ñ –ø–∞—Ä–∏','—è–∫—ñ —Å—å–æ–≥–æ–¥–Ω—ñ –ø–∞—Ä–∏']

	tomorrow=['—è–∫—ñ –ø–∞—Ä–∏ –∑–∞–≤—Ç—Ä–∞','—è–∫—ñ –∑–∞–≤—Ç—Ä–∞ –ø–∞—Ä–∏','—è–∫—ñ –≤ –Ω–∞—Å –ø–∞—Ä–∏ –∑–∞–≤—Ç—Ä–∞','—è–∫—ñ –ø–∞—Ä–∏ –≤–∑–∞–≥–∞–ª—ñ –∑–∞–≤—Ç—Ä–∞']

	dictt={'–∫–æ–º–ø. –º–µ—Ä–µ–∂—ñ.':'–ü–µ—Ç—Ä–∏—à–∏–Ω –ú–∏—Ö–∞–π–ª–æ –õ—é–±–æ–º–∏—Ä–æ–≤–∏—á','–º–æ—ñ–¥–æ':'–ú–∞–∑—É—Ä–µ–Ω–∫–æ –í—ñ–∫—Ç–æ—Ä –í–æ–ª–æ–¥–∏–º–∏—Ä–æ–≤–∏—á','–ø–µ–¥–∞–≥–æ–≥—ñ–∫–∞.':'–°—Ç–∏–Ω—Å—å–∫–∞ –í—ñ–∫—Ç–æ—Ä—ñ—è –í–æ–ª–æ–¥–∏–º–∏—Ä—ñ–≤–Ω–∞',
	'–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç.': '–ì—Ä–µ—á–∞–Ω–∏–∫ –ù–∞—Ç–∞–ª—ñ—è –Æ—Ä—ñ—ó–≤–Ω–∞','–æ–±—Ä–æ–±–∫–∞ –∑–æ–±—Ä–∞–∂.':'–ö–æ—Å–∞—Ä–µ–≤–∏—á –†–æ—Å—Ç–∏—Å–ª–∞–≤ –Ø—Ä–æ—Å–ª–∞–≤–æ–≤–∏—á','–∫–æ–º–ø. –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞.':'–ö–æ—Å—Ç–∏—à–∏–Ω –õ—é–±–æ–≤ –ü–∞–≤–ª—ñ–≤–Ω–∞',
	'–ø–∞—Ä–∞–ª–µ–ª—å–Ω—ñ. –æ–±—á–∏—Å.':'–ì–æ—Ä—î–ª–æ–≤ –í—ñ—Ç–∞–ª—ñ–π –û–ª–µ–≤—Ç–∏–Ω–æ–≤–∏—á','–æ–ø–µ—Ä–∞—Ü—ñ–π–Ω—ñ. —Å–∏—Å—Ç–µ–º–∏.':' –ì–µ–π–∫–æ –û—Ä–µ—Å—Ç –Ø—Ä–æ—Å–ª–∞–≤–æ–≤–∏—á'}
	oleksiy=random.randrange(0,len(lox))
	
	for i in today:
		if message.text.lower()==i:
			day=str(now.day)+'.'+str(now.month)+'.'+str(now.year)
			weekDay=datetime.datetime(now.year,now.month,now.day).strftime('%A')
			bot.send_message(message.chat.id,message.from_user.first_name+' '+message.from_user.last_name +'\n'+brous(day,weekDay,'–°—å–æ–≥–æ–¥–Ω—ñ '))
	for j in tomorrow:
		if message.text.lower()==j:
			day=str(now.day+1)+'.'+str(now.month)+'.'+str(now.year)
			weekDay=datetime.datetime(now.year,now.month,now.day+1).strftime('%A')
			bot.send_message(message.chat.id,message.from_user.first_name+' '+message.from_user.last_name +'\n'+brous(day,weekDay,'–ó–∞–≤—Ç—Ä–∞ '))
	for i in dictt:
		if i in message.text.lower():
			bot.send_message(message.chat.id,dictt[i])
			bot.send_message(message.chat.id,'—Ç–∞–¥–∞–º',reply_markup=markup)
	if message.from_user.first_name=='Oleksii' and message.from_user.last_name=='Pashkevych':
		bot.send_message(message.chat.id,lox[oleksiy]) 		
bot.polling()    